// Generated by CoffeeScript 1.9.1
var Player,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Player = (function(superClass) {
  extend(Player, superClass);

  function Player(el, self) {
    this.el = el;
    this.self = self;
    Player.__super__.constructor.call(this, this.el);
    this.y(pongScreen.height / 2 - this.height() / 2);
    if (this.self != null) {
      this.x(20);
      this.color("green");
    } else {
      this.x(pongScreen.width - this.width() - 20);
      this.color("red");
    }
  }

  Player.prototype.moveUp = function() {
    return this.move({
      x: 0,
      y: 400
    });
  };

  Player.prototype.moveDown = function() {
    return this.move({
      x: 0,
      y: -400
    });
  };

  Player.prototype._update = function() {
    if (this.self != null) {
      if (events[keyCodes.w]) {
        this.moveUp();
      }
      if (events[keyCodes.s]) {
        return this.moveDown();
      }
    } else {
      if (events.other[keyCodes.w]) {
        this.moveUp();
      }
      if (events.other[keyCodes.s]) {
        return this.moveDown();
      }
    }
  };

  return Player;

})(Object);
