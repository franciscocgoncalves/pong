class Object
  constructor: (@el, @speed = x: 0, y: 0) ->

  x: (x) ->
    @el.css("left", x) if x?
    parseFloat @el.css "left"

  y: (y) ->
    @el.css("bottom", y + "px") if y?
    parseFloat @el.css "bottom"
<<<<<<< HEAD

  moveY: ->
    finalY = @y() + @speed.y * @delta / 1000
    if finalY < 0
      @y 0
    else if finalY + @el.height() > screen.height
      @y screen.height
    else
      @y finalY

  moveUp: ->
    @speed.y = Math.abs @speed.y
    @moveY()

  moveDown: ->
    @speed.y = - Math.abs @speed.y
    @moveY()

  update: ->
    if !@updated?
      @updated = Date.now()
      return

    @delta = Date.now() - @updated

    if events[keyCodes.w]
      @moveUp()
    if events[keyCodes.s]
      @moveDown()

    @updated = @updated + @delta

=======
  
  width: ->
    @el.width()
    
  height: -> 
    @el.height()
    
  left: ->
    @x()
    
  right: ->  
    @x() + @width()
    
  up: ->
    @y() + @height()
    
  down: ->
   @y()
    
  checkColision: (o) ->
    
    if ( o.left() >= @left() && o.left() <= @right() || o.right() <=Â @right() && o.right() >= @left() ) && (o.up() <= @up() && o.up() >= @down() || o.down() >= @down() && o.down() <= @up() )
      return true
    return false
    
>>>>>>> 2df9d167e9d1ea2708fbaf2c2709a6c269afff23


class Player extends Object
  constructor: (@el) ->
    super @el, x: 0, y: 200



keyCodes =
  w: 87
  s: 83

events = {}
screen = null;

$ ->
  $(document).on "keydown", (event) ->
    events[event.keyCode] = true

  $(document).on "keyup", (event) ->
    events[event.keyCode] = false

  screen = $ ".screen"
  player1 = new Player $ "#player1"
<<<<<<< HEAD
  setInterval( ->
    player1.update()
  , 100 / 6)
=======
  console.log player1.x()
  setTimeout((() ->
    player1.x(100)
    ), 2000)

>>>>>>> 2df9d167e9d1ea2708fbaf2c2709a6c269afff23

class Ball extends Object
