// Generated by CoffeeScript 1.9.1
var Object, Player, events, keyCodes, screen,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Object = (function() {
  function Object(el, speed) {
    this.el = el;
    this.speed = speed != null ? speed : {
      x: 0,
      y: 0
    };
  }

  Object.prototype.x = function(x) {
    if (x != null) {
      this.el.css("left", x);
    }
    return parseFloat(this.el.css("left"));
  };

  Object.prototype.y = function(y) {
    if (y != null) {
      this.el.css("bottom", y + "px");
    }
    return parseFloat(this.el.css("bottom"));
  };

  Object.prototype.moveY = function() {
    var finalY;
    finalY = this.y() + this.speed.y * this.delta / 1000;
    if (finalY < 0) {
      return this.y(0);
    } else if (finalY + this.el.height() > screen.height) {
      return this.y(screen.height);
    } else {
      return this.y(finalY);
    }
  };

  Object.prototype.moveUp = function() {
    this.speed.y = Math.abs(this.speed.y);
    return this.moveY();
  };

  Object.prototype.moveDown = function() {
    this.speed.y = -Math.abs(this.speed.y);
    return this.moveY();
  };

  Object.prototype.update = function() {
    if (this.updated == null) {
      this.updated = Date.now();
      return;
    }
    this.delta = Date.now() - this.updated;
    if (events[keyCodes.w]) {
      this.moveUp();
    }
    if (events[keyCodes.s]) {
      this.moveDown();
    }
    return this.updated = this.updated + this.delta;
  };

  return Object;

})();

Player = (function(superClass) {
  extend(Player, superClass);

  function Player(el) {
    this.el = el;
    Player.__super__.constructor.call(this, this.el, {
      x: 0,
      y: 200
    });
  }

  return Player;

})(Object);

keyCodes = {
  w: 87,
  s: 83
};

events = {};

screen = null;

$(function() {
  var player1;
  $(document).on("keydown", function(event) {
    return events[event.keyCode] = true;
  });
  $(document).on("keyup", function(event) {
    return events[event.keyCode] = false;
  });
  screen = $(".screen");
  player1 = new Player($("#player1"));
  return setInterval(function() {
    return player1.update();
  }, 100 / 6);
});
